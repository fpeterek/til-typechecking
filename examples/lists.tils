import "fns.tils".

['PrintRes '{ 'Time, 'List<Int>, 'Tuple<World, Real> }].

['PrintRes '['EmptyListOf 'World]].
['PrintRes '['EmptyList]].

['PrintRes '['TypeOf ['EmptyListOf 'World]]].
['PrintRes '['TypeOf ['EmptyList]]].

['PrintRes '['Cons '1 ['EmptyList]]].

['PrintRes '['IsEmpty ['EmptyList]]].

defn Map(list: List<Any<1>>, fn: (Any<2> Any<1>)) -> List<Any<2>> =
    ['If
        ['IsEmpty list] ['EmptyList]
        'True ['Cons [fn ['Head list]] ['Map ['Tail list] fn]]].

['Println ['TypeOf [\x: Int -> Int: ['* x x]]]].

['Println ['Map { '1, '2, '3 } [\x: Int -> Int: ['* x x]] ]].

defn Square(x: Int) -> Int = ['* x x].

['Println ['Map { '1, '2, '3 } 'Square]].
