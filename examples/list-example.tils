
numbers -> List(Int) := ['ListOf '1 '6 '2 '5 '3 '4].

Defn LessThanFive(num: Int) -> Bool := ['< num '5]. 

Defn GetSmall(list: List(Int)) -> List(Int) :=
    ['If ['IsEmpty list]
        list
        ['If ['LessThanFive ['Head list]]
            ['Cons ['Head list] ['GetSmall ['Tail list]]]
            ['GetSmall ['Tail list]]]].

['Println ['GetSmall numbers]].

Defn Filter(list: List(Int), pred: (Bool Int)) -> List(Int) :=
    ['If ['IsEmpty list]
        list
        ['If [pred ['Head list]]
            ['Cons ['Head list] ['Filter ['Tail list] pred]]
            ['Filter ['Tail list] pred]]].
    
['Println ['Filter numbers 'LessThanFive]].

Defn GetBig(list: List(Int)) -> List(Int) :=
    ['Filter list [\x: Int -> Bool ['> x '4]]].

['Println ['GetBig numbers]].

Defn Map(list: List(Int), transform: (Int Int)) -> List(Int) :=
    ['If ['IsEmpty list]
        list
        ['Cons [transform ['Head list]] ['Map ['Tail list] transform]]].

['Println ['Map numbers [\x: Int -> Int ['* x x]]]].

Karel, Petr, Adela/Indiv.

['Println ['ListOf 'Karel 'Petr 'Adela]].

