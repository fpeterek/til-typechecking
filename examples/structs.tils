Import "fns.tils".

Struct TestStruct {
    first: Int,
    second: Real,
    third: Text,
}.

myStruct -> TestStruct := {TestStruct '1 '1.0 '"one"}.

['PrintRes 'myStruct].

Struct Tree {
    value: Int,
    subtrees: List(Tree),
}.

myTree -> Tree := {Tree
    '1
    ['ListOf 
        {Tree '2 {List(Tree) }}
        {Tree '3 ['ListOf {Tree '4 {List(Tree) } }]}]}.

Defn MaxOf(fst: Int, snd: Int) -> Int := 
    ['If ['> fst snd] fst snd].

Defn MaxInt(lst: List(Int), max: Int) -> Int :=
    ['If ['IsEmpty lst]
        max
        ['MaxInt ['Tail lst] ['MaxOf ['Head lst] max]]].


Defn Max(lst: List(Int)) -> Int := ['MaxInt ['Tail lst] ['Head lst]].

Defn Depths(trees: List(Tree)) -> List(Int) :=
    ['If ['IsEmpty trees]
        {List(Int) }
        ['Cons 
            ['Depth ['Head trees]] 
            ['Depths ['Tail trees]]]].

Defn Depth(tree: Tree) -> Int := 
    ['If ['IsEmpty tree::subtrees]
        '1
        ['+ '1 ['Max ['Depths tree::subtrees]]]].

['PrintRes 'myTree::subtrees].
['PrintRes '['Depth myTree]].
